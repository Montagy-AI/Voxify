services:
  frontend:
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    container_name: voxify_frontend
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped
    command: npm start

  api:
    build:
      context: ./backend/
      dockerfile: Dockerfile
      target: production
    container_name: voxify_api
    depends_on:
      db-init:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=sqlite:////data/voxify.db
      - VECTOR_DB_PATH=/data/chroma_db
      - JWT_SECRET_KEY=Majick
      - SECRET_KEY=Majick
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USERNAME=voxifynoreply@gmail.com
      - SMTP_PASSWORD=uhxxrskdlliidcyg
      - SMTP_USE_TLS=true
      - SMTP_FROM_EMAIL=voxifynoreply@gmail.com
      - SMTP_FROM_NAME=Voxify
      - FRONTEND_URL=https://voxify-prod.vercel.app
    volumes:
      - data_volume:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db-init:
    build:
      context: ./backend/
      dockerfile: Dockerfile
      target: production
    container_name: voxify_db_init
    volumes:
      - data_volume:/data
    environment:
      - DATABASE_URL=sqlite:////data/voxify.db
      - VECTOR_DB_PATH=data/chroma_db
      - PYTHONPATH=/app
    command: ["python", "scripts/init_db.py"]
    restart: "no"

  tests:
    build:
      context: .
      dockerfile: backend/tests/Dockerfile
    container_name: voxify_tests
    depends_on:
      api:
        condition: service_healthy
    volumes:
      - .:/app
      - data_volume:/data
    working_dir: /app/backend
    environment:
      - DATABASE_URL=sqlite:////data/voxify.db
      - VECTOR_DB_PATH=/data/chroma_db
      - DOCKER_ENV=true
      - FLASK_HOST=voxify_api
    command:
      [
        "sh",
        "-c",
        "python -m pytest tests/ -v && python -m unittest discover -s tests -p 'test_*.py' -v",
      ]
    restart: "no"

  frontend-tests:
    build:
      context: ./frontend/
      dockerfile: Dockerfile.test
    container_name: voxify_frontend_tests
    depends_on:
      api:
        condition: service_healthy
    volumes:
      - ./frontend:/app
      - /app/node_modules
    working_dir: /app
    environment:
      - REACT_APP_API_URL=http://voxify_api:8000
      - CI=true
    command: ["npm", "run", "test:ci"]
    restart: "no"

  snyk-security:
    image: snyk/snyk:node
    container_name: voxify_snyk_security
    volumes:
      - ./backend:/app/backend
    working_dir: /app/backend
    environment:
      - SNYK_TOKEN=${SNYK_TOKEN:-}
    command:
      [
        "sh",
        "-c",
        '[ -z "$$SNYK_TOKEN" ] && { echo ''Error: SNYK_TOKEN is not set''; exit 1; }; snyk code test --severity-threshold=high',
      ]
    restart: "no"

volumes:
  data_volume:
